xlim=c(0,100),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", sort(unique(name_to_biomes(info$BIOME))), border = FALSE,
text.col = color_to_biomes(info$BIOME))
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,100),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", sort(unique(name_to_biomes(info$BIOME))), border = FALSE,
text.col = color_to_biomes(info$BIOME))
dev.off()
t
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,100),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
sort(unique(name_to_biomes(info$BIOME)))
legend("topright", sort(unique(name_to_biomes(info$BIOME))),pch=16,
col=color_to_biomes(unique(name_to_biomes(info$BIOME))), border = FALSE,
text.col = color_to_biomes(unique(name_to_biomes(info$BIOME))))
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,100),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", sort(unique(name_to_biomes(info$BIOME))),pch=16,
col=color_to_biomes(unique(name_to_biomes(info$BIOME))), border = FALSE,
text.col = color_to_biomes(unique(name_to_biomes(info$BIOME))))
dev.off()
}
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,100),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", sort(unique(name_to_biomes(info$BIOME))),pch=16,
col=color_to_biomes(unique(info$BIOME)), border = FALSE,
text.col = color_to_biomes(unique(info$BIOME)))
dev.off()
}
sort(unique(info$BIOME))
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,10),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))))
dev.off()
}
Biome.names <- c("Tropical Subtropical Moist Broadleaf Forests","Tropical Subtropical Dry Broadleaf Forests",
"Tropical Subtropical Coniferous Broadleaf Forests","Temperate Broadleaf Mixed Forests",
"Temperate Coniferous Forests","Boreal Forests Taiga",
"Tropical Subtropical Grasslands, Savannas, Shrubland", "Temperate Grasslands, Savannas, Shrubland",
"Flooded Grasslands and Savannas","Montane Grasslands Shrublands" ,
"Tundra","Mediterranean Forests, Woodlands, Scrub" ,
"Desert and Xeric Shrublands","Mangroves")
load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_20191111.RData"))
# cut to relevant Ecoregions:
load(file.path(origin,"data","helper_files","Ecoregions_selected","Ecoregion_Agg2.RData"))
TRY_Env1=TRY_Env1[TRY_Env1$Group.2%in%Ecoregion_Agg2$ECO_NAME,]
trait_agg1_2 <- as.data.frame(TRY_Env1[,which(Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="trait")
])
names(trait_agg1_2) <- gsub(names(trait_agg1_2),pattern = "_gf",replacement = "")
lat_agg1_2 <- data.frame(Lat=TRY_Env1[,which(colnames(TRY_Env1)%in%"Lat") ])
info <- data.frame(BIOME=TRY_Env1[,which(colnames(TRY_Env1)%in%"BIOME") ])
names(lat_agg1_2) <- "Lat"
# binning needed
lat_bins <- round(lat_agg1_2,0)
data_trait <-cbind(lat_bins,trait_agg1_2)
data_trait <- as.data.frame(data_trait)
names(data_trait)[1] <- "lat_bins"
new.median.fun  <- function(x) {
if (is.numeric(x)) {
return(median(x, na.rm=T))
} else {
return(unique(x))
}
}
data_trait_ag <- aggregate(x=data_trait[which(!(names(data_trait) %in% c("lat_bins")))],
by = list(data_trait$lat_bins), FUN=new.median.fun)
data_trait_s <- data_trait_ag[order(data_trait_ag$Group.1),]
t=1
t=1
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,10),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
info$BIOME
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,10),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_20191111.RData"))
# cut to relevant Ecoregions:
load(file.path(origin,"data","helper_files","Ecoregions_selected","Ecoregion_Agg2.RData"))
TRY_Env1=TRY_Env1[TRY_Env1$Group.2%in%Ecoregion_Agg2$ECO_NAME,]
trait_agg1_2 <- as.data.frame(TRY_Env1[,which(Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="trait")
])
names(trait_agg1_2) <- gsub(names(trait_agg1_2),pattern = "_gf",replacement = "")
lat_agg1_2 <- data.frame(Lat=TRY_Env1[,which(colnames(TRY_Env1)%in%"Lat") ])
info <- data.frame(BIOME=TRY_Env1[,which(colnames(TRY_Env1)%in%"BIOME") ])
names(lat_agg1_2) <- "Lat"
# binning needed
lat_bins <- round(lat_agg1_2,0)
data_trait <-cbind(lat_bins,trait_agg1_2)
data_trait <- as.data.frame(data_trait)
names(data_trait)[1] <- "lat_bins"
new.median.fun  <- function(x) {
if (is.numeric(x)) {
return(median(x, na.rm=T))
} else {
return(unique(x))
}
}
data_trait_ag <- aggregate(x=data_trait[which(!(names(data_trait) %in% c("lat_bins")))],
by = list(data_trait$lat_bins), FUN=new.median.fun)
data_trait_s <- data_trait_ag[order(data_trait_ag$Group.1),]
t=1
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,10),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 100,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"",""),tick = F,cex=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))))
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))))
dev.off()
}
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.7,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))),cex=.8,bty = "n")
dev.off()
}
for(t in 1:17){
png(file.path(origin, "figures","figure_S4",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=2,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))),cex=.8,bty = "n")
dev.off()
}
for(t in 1:17){
png(file.path(origin, "figures","figure_S4","all",
paste0(names(trait_agg1_2)[t],"_latgradient.png")),width=800,height=500)
par(mfrow=c(1,1),mar=c(5,5,2,2))
plot(abs(lat_agg1_2$Lat),log(data_trait[,t+1]),frame.plot = FALSE,
xlim=c(0,110),col=add.alpha(color_to_biomes(info$BIOME),alpha = .5),xaxt="n",
ylab=paste0(names(trait_agg1_2)[t]," [log]"),
xlab="Latitude (abs)",pch=16,cex=.7,cex.lab=2.5,cex.axis=2)
axis(1,at = seq(from=0,to = 110,by = 10),labels = c(0,10,20,30,40,50,60,70,80,"","",""),tick = F,cex=2)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=2.5,
col="white",pch=16)
points(data_trait_s$Group.1,log(data_trait_s[,t+1]),cex=1.5,
col="black",pch=16)
legend("topright", name_to_biomes(sort(unique(info$BIOME))),pch=16,
col=color_to_biomes(sort(unique(info$BIOME))), border = FALSE,
text.col = color_to_biomes(sort(unique(info$BIOME))),cex=.8,bty = "n")
dev.off()
}
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/01_Complete_for_submission"
#origin="/Net/Groups/BGI/work_1/2018_Dichotomy/FINAL/Submission/01_Complete_for_submission"
# origin = # please add your local path here & comment the ones below.
# load functions
source(file.path(origin,"scripts" ,"_master","fn_functions.R"))
# install packages if unloaded
source(file.path(origin,"scripts" ,"_master","fn_packages.R"))
#------------------------------------------------------------------------------------
# default: output_term = ""
# uncomment to activate woody or non-woody data set.
#------------------------------------------------------------------------------------
output_term = "PCA" # defines with which subset the analysis will be done  (total)
#install.packages("dplyr")
# ------------
# load data
# ------------
if(output_term==""){
load(file = file.path(origin,"data","master_matrix","TRY_Env2.RData"))}
if(output_term=="woody"){
load(file = file.path(origin,"data","master_matrix","TRY_Env2_woody.RData"))}
if(output_term=="non_woody"){
load(file = file.path(origin,"data","master_matrix","TRY_Env2_non_woody.RData"))}
if(output_term=="PCA"){
load(file.path(origin,"data","helper_files","fig_1b","PCA.RData"))}
if(output_term=="PCA"){
load(file = file.path(origin,"data","master_matrix","TRY_Env2.RData"))
load(file.path(origin,"data","helper_files","fig_1b","PCA.RData"))}
info=TRY_Env$info
trait=TRY_Env$trait
if(output_term=="PCA"){trait <-pca_FMr$ind$coord}
dim(trait)
if(output_term==""|output_term=="PCA"){
load(file = file.path(origin,"data","master_matrix","TRY_Env2.RData"))}
info=TRY_Env$info
trait=TRY_Env$trait
if(output_term=="PCA"){trait <-TRY_Env$trait_pca}
soil=TRY_Env$soil
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/00_Prepare_for_submission"
#origin="/Net/Groups/BGI/work_1/2018_Dichotomy/FINAL/Submission/00_Prepare_for_submission"
# load functions
source(file.path(origin,"scripts" ,"_master","fn_functions.R"))
output_term="PCA"
if(output_term==""|output_term=="PCA"){
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
# "TRY_Env2_Kier_20191111.RData"))}
"TRY_Env2_Kier_20200424.RData"))}
if(output_term=="woody"|output_term=="non_woody"){
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
"TRY_Env2_KierNONwoody_20200214.RData"))}
TRY_Env_o=TRY_Env2_Kier
out <- prep_TRY_Env(origin,output_term,TRY_Env_o)
info=out$info
prep_TRY_Env
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/00_Prepare_for_submission"
#origin="/Net/Groups/BGI/work_1/2018_Dichotomy/FINAL/Submission/00_Prepare_for_submission"
# load functions
source(file.path(origin,"scripts" ,"_master","fn_functions.R"))
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
# "TRY_Env2_Kier_20191111.RData"))}
"TRY_Env2_Kier_20200424.RData"))
TRY_Env_o=TRY_Env2_Kier
out <- prep_TRY_Env(origin,output_term,TRY_Env_o)
output_term=""
if(output_term==""|output_term=="PCA"){
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
# "TRY_Env2_Kier_20191111.RData"))}
"TRY_Env2_Kier_20200424.RData"))}
TRY_Env_o=TRY_Env2_Kier
out <- prep_TRY_Env(origin,output_term,TRY_Env_o)
info=out$info
trait=out$trait
trait_o =out$trait
require(FactoMineR)
pca.trait <- PCA(log(trait_o),ncp = 5)
trait_pca <- pca.trait$ind$coord[,1:5]
names(trait_pca) <- paste0("trait_PCA_",1:ncol(trait_pca))
soil=out$soil
climate=out$climate
out <- prep_TRY_Env(origin,output_term,TRY_Env_o)
output_term=""
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
# "TRY_Env2_Kier_20191111.RData"))}
"TRY_Env2_Kier_20200424.RData"))}
if(output_term=="woody"|output_term=="non_woody"){
load(file = file.path(origin,"data","master_matrix","_aggregated_agg2","NA_mnNbr",
"TRY_Env2_KierNONwoody_20200214.RData"))}
TRY_Env_o=TRY_Env2_Kier
out <- prep_TRY_Env(origin,output_term,TRY_Env_o)
info=out$info
trait=out$trait
trait_o =out$trait
require(FactoMineR)
pca.trait <- PCA(log(trait_o),ncp = 5)
trait_pca <- pca.trait$ind$coord[,1:5]
names(trait_pca) <- paste0("trait_PCA_",1:ncol(trait_pca))
soil=out$soil
climate=out$climate
noise=out$noise
climate_energy = out$climate_energy
climate_water = out$climate_water
soil_physics=out$soil_physics
soil_chemistry=out$soil_chemistry
TRY_Env <- list()
TRY_Env$info <- info
TRY_Env$trait <- trait
TRY_Env$soil <- soil
TRY_Env$climate <- climate
if(output_term=="PCA"){output_term2=""}
if(output_term!="PCA"){output_term2=output_term}
TRY_Env_o=TRY_Env2_Kier
out <- prep_TRY_Env(origin,output_term2,TRY_Env_o)
info=out$info
trait=out$trait
trait_o =out$trait
require(FactoMineR)
pca.trait <- PCA(log(trait_o),ncp = 5)
trait_pca <- pca.trait$ind$coord[,1:5]
names(trait_pca) <- paste0("trait_PCA_",1:ncol(trait_pca))
soil=out$soil
climate=out$climate
noise=out$noise
climate_energy = out$climate_energy
climate_water = out$climate_water
soil_physics=out$soil_physics
soil_chemistry=out$soil_chemistry
TRY_Env <- list()
TRY_Env$info <- info
TRY_Env$trait <- trait
TRY_Env$soil <- soil
TRY_Env$climate <- climate
if(output_term==""){
TRY_Env$trait_pca <- trait_pca[,1:2]
TRY_Env$noise <- noise
TRY_Env$climate_energy <- climate_energy
TRY_Env$climate_water <- climate_water
TRY_Env$soil_physics <- soil_physics
TRY_Env$soil_chemistry <- soil_chemistry }
new_origin="/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/Complete_for_submission"
if(output_term==""){save(TRY_Env,file=file.path(new_origin,"data","master_matrix","TRY_Env2_2020.RData"))}
new_origin="/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/01_Complete_for_submission"
if(output_term==""){save(TRY_Env,file=file.path(new_origin,"data","master_matrix","TRY_Env2_2020.RData"))}
if(output_term=="non_woody"){save(TRY_Env,file=file.path(new_origin,"data","master_matrix","TRY_Env2_non_woody_2020.RData"))}
if(output_term=="woody"){save(TRY_Env,file=file.path(new_origin,"data","master_matrix","TRY_Env2_woody_2020.RData"))}
test1$nb
load("/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/01_Complete_for_submission/data/_results/dim_PCA/dim_PCA.RData")
require(ade4)
# ---------------------------------------------------------------------------------------
# load data
# ---------------------------------------------------------------------------------------
list.files(file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr"))
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/01_Complete_for_submission"
require(ade4)
# ---------------------------------------------------------------------------------------
# load data
# ---------------------------------------------------------------------------------------
list.files(file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr"))
if(output_term==""){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_20191111.RData"))}
output_term=""
# ---------------------------------------------------------------------------------------
# load data
# ---------------------------------------------------------------------------------------
list.files(file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr"))
if(output_term==""){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_20191111.RData"))}
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/00_Prepare_for_submission"
output_term=""
# ---------------------------------------------------------------------------------------
# load data
# ---------------------------------------------------------------------------------------
list.files(file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr"))
if(output_term==""){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_20191111.RData"))}
if(output_term=="woody"){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1woody_20200214.RData"))
TRY_Env1=TRY_Env1_w}
if(output_term=="non_woody"){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1non_woody_20200214.RData"))
TRY_Env1=TRY_Env1_nw}
if(output_term=="other"){load(file = file.path(origin,"data","master_matrix","_aggregated_agg1","NA_mnNbr","TRY_Env1_other_20200214.RData"))
TRY_Env1=TRY_Env1_o}
TRY_Env_o<- TRY_Env1
# cut to relevant Ecoregions:
load(file.path(origin,"data","helper_files","Ecoregions_selected","Ecoregion_Agg2.RData"))
TRY_Env1=TRY_Env1[TRY_Env1$Group.2%in%Ecoregion_Agg2$ECO_NAME,]
trait <- as.data.frame(TRY_Env1[,Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="trait"])
source(file.path(origin,"scripts" ,"_master","fn_functions.R"))
# install packages if unloaded
source(file.path(origin,"scripts" ,"_master","fn_packages.R"))
origin = "/Users/jjoswig/Documents/_docs/03_projects/2020/002_Dichotomy/2019_Revision/20191004_Revision/R/Submission/01_Complete_for_submission"
#origin="/Net/Groups/BGI/work_1/2018_Dichotomy/FINAL/Submission/01_Complete_for_submission"
# origin = # please add your local path here & comment the ones below.
# load functions
source(file.path(origin,"scripts" ,"_master","fn_functions.R"))
# install packages if unloaded
source(file.path(origin,"scripts" ,"_master","fn_packages.R"))
# ---------------------------------------------------------------------------------------
# load data
# ---------------------------------------------------------------------------------------
list.files(file.path(origin,"data","master_matrix"))
if(output_term==""){load(file = file.path(origin,"data","master_matrix","TRY_Env1_20191111.RData"))}
# cut to relevant Ecoregions:
load(file.path(origin,"data","helper_files","Ecoregions_selected","Ecoregion_Agg2.RData"))
TRY_Env1=TRY_Env1[TRY_Env1$Group.2%in%Ecoregion_Agg2$ECO_NAME,]
trait <- as.data.frame(TRY_Env1[,Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="trait"])
names(trait) <- gsub(colnames(trait),pattern = "_gf",replacement = "")
climate <- as.data.frame(TRY_Env1[,Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="climate"])
names(climate)
soil <- as.data.frame(TRY_Env1[,Rename_Vars(gsub(colnames(TRY_Env1),pattern = "_gf",replacement = ""))[,2]=="soil"])
#### add 2020-08-27
names(soil)
soil <- soil[,-grep(names(soil),pattern = "_sl2")]
soil <- soil[,-grep(names(soil),pattern = "_sl3")]
soil <- soil[,-grep(names(soil),pattern = "_sl4")]
soil <- soil[,-grep(names(soil),pattern = "_sl5")]
soil <- soil[,-grep(names(soil),pattern = "_sl6")]
soil <- soil[,-grep(names(soil),pattern = "_sl7")]
soil <- soil[,-grep(names(soil),pattern = "_sd2")]
soil <- soil[,-grep(names(soil),pattern = "_sd3")]
soil <- soil[,-grep(names(soil),pattern = "_sd4")]
soil <- soil[,-grep(names(soil),pattern = "_sd5")]
soil <- soil[,-grep(names(soil),pattern = "_sd6")]
### end addtiion 2020-08-27
names(soil)
if(1!=1){
dat <- log(trait)
pca_trait <- dudi.pca(dat,scannf=FALSE)
test1 <- testdim(pca1)
test1
save(test1,file=file.path(origin,"dim_PCA.RData"))
test1$nb
test1$nb.cor
}
pca_trait <- dudi.pca(dat,scannf=FALSE)
for(i in 1:ncol(dat)){
x <- c(0,de_fit.m[i,1]*8)
y <- c(0,de_fit.m[i,2]*8)
## draw arrows from point to point :
s <- seq(length(x)-1)  # one shorter than data
arrows(x[s], y[s], x[s+1], y[s+1],angle = 25, col = color_to_traits(colnames(dat)[i]),lwd=2.2)
adjx=1.1;adjy=1.1
text(x[2]*adjx, y[2]*adjy, labels = rownames(de_fit.m)[i],
cex=1.9,col=color_to_traits(colnames(dat)[i]))
}
dat <- log(trait)
pca_trait <- dudi.pca(dat,scannf=FALSE)
test1 <- testdim(pca1)
pca_trait <- dudi.pca(dat,scannf=FALSE)
sign_dim_traits <- testdim(pca_trait)
test1
save(sign_dim_traits,file=file.path(origin,"dim_PCA.RData"))
sign_dim_traits$nb
sign_dim_traits$nb.cor
print(sign_dim_traits$nb)
