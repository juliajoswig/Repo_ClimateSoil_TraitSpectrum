if(rownames(dat_plot)[i]=="DispULen"){adx=0.04;ady=0}
if(rownames(dat_plot)[i]=="LeNArea"){adx=0.11;ady=-.08}
if(rownames(dat_plot)[i]=="VesLen"){adx=0.04;ady=-.079}
}
for(i2 in c(0.001)){
j2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
for(j2 in c(0.001)){
i2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
text(dat_plot$ONE[i]+adx,dat_plot$TWO[i]+ady,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= color_to_traits(rownames(dat_plot)[i]),srt=-45,cex=1.8)
}
x1=.6
x2=.8
x3=.7
x4=.5
y1=.34
y2= .14
y3=.04
y4=.24
plot_overlayNB(edg,axis_cex=1,climate_col=climate_col_o,soil_col=soil_col_o)
polygon(x=c(x1,x2,x3,x4),
y = c(y1,y2,y3,y4),
border = "white", col = "white", lty = 1)
ni=.21
nx=.11
points(.5+nx, .5-ni, pch=15,col=size_col,cex=1.8)
text(.57+nx, .427-ni, "Size trait",col=size_col,srt=-45,cex=1.8)
points(.47+nx, .47-ni, pch=15,col=eco_col,cex=1.8)
text(.535+nx, .4-ni, "Eco trait",col=eco_col,srt=-45,cex=1.8)
points(.44+nx, .44-ni, pch=15,col=other_col,srt=-45,cex=1.8)
text(.515+nx, .36-ni, "Other trait",col=other_col,cex=1.8,srt=-45)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
text(x = 0.5, y=.9,labels = paste0(nm[1]," Effect (Independent + Joint/2)"),cex=2.5)#, srt = -90)#nm[1],
legend(.1, .8, c("Size trait", "Eco trait", "Other trait"),
#           col = c("#5884b4", "#cd6787", "#e6cf6c"),
col=c(size_col,eco_col,other_col),
text.col = "black", pch = c(16,16,16),
merge = FALSE ,border = FALSE,bty="n" ,y.intersp = 1.5,pt.cex = 2.5)
dev.off()
}
{
pdf(file = file.path(origin,"figures","figure_3",paste0("figure_S3a_",shorty,".pdf")),width=10,height=10)
par(mfrow=c(1,1),mar=c(7,7,0,0))
#plot(x=c(0,1),y=c(0,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1, #c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
#     xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
i=1
t=1
dat_plot <- rep(NA,6)
for(t in c(1:17)){
ONEt <- X_hp1[,t]
TWOt <- X_hp2[,t]
dat_plot <- as.data.frame(rbind(dat_plot,
c(mean(ONEt,na.rm = T),quantile(ONEt,0.05,na.rm = T),quantile(ONEt,0.95,na.rm = T),
mean(TWOt,na.rm = T),quantile(TWOt,0.05,na.rm = T),quantile(TWOt,0.95,na.rm = T))))
}
names(dat_plot) <- c("ONE","ONEi","ONEx","TWO","TWOi","TWOx")
dat_plot <- dat_plot[!is.na(dat_plot[,1]),]
rownames(dat_plot) =colnames(X_hp1)
plot_overlayNB(edg,axis_cex=1,climate_col=climate_col_o,soil_col=soil_col_o)
axis(2,at=.5,line = 2,tick = FALSE,labels = paste0(nm[2]," Effect (Independent + Joint/2)"),
cex.axis=2.5,srt = -90)
axis(1,at=.5,line = 3,tick = FALSE,labels = paste0(nm[1]," Effect (Independent + Joint/2)"),
cex.axis=2.5,srt = -90)
i=1
for(i in c(1:nrow(dat_plot))){
points(dat_plot$ONE[i],dat_plot$TWO[i],pch=15,col= color_to_traits(rownames(dat_plot)[i]),cex=2)
}
for(i in c(1:nrow(dat_plot))){
adx=.035
ady=0.006
print(rownames(dat_plot)[i])
if(output_term==""){
if(rownames(dat_plot)[i]=="ConduitDens"){adx=.035;ady=.01}
if(rownames(dat_plot)[i]=="LeN"){adx=-0.03;ady=-.008}
if(rownames(dat_plot)[i]=="LeFMass"){adx=-0.075;ady=0.085}
if(rownames(dat_plot)[i]=="SSD"){adx=-0.05;ady=0.09}
if(rownames(dat_plot)[i]=="SLA"){adx=-0.03;ady=-0.028}
if(rownames(dat_plot)[i]=="LeC"){adx=0.0;ady=-0.04}
if(rownames(dat_plot)[i]=="SeedMass"){adx=-0.075;ady=0.08}
if(rownames(dat_plot)[i]=="PlantHeight"){adx=-0.055;ady=0.055}
if(rownames(dat_plot)[i]=="SeLen"){adx=-0.07;ady=0.07}
if(rownames(dat_plot)[i]=="LeNP"){adx=0.084;ady=-0.05}
if(rownames(dat_plot)[i]=="Led15N"){adx=0.085;ady=-0.06}
if(rownames(dat_plot)[i]=="DispULen"){adx=0.04;ady=0}
if(rownames(dat_plot)[i]=="LeNArea"){adx=0.11;ady=-.08}
if(rownames(dat_plot)[i]=="VesLen"){adx=0.04;ady=-.079}
}
for(i2 in c(0.001)){
j2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
for(j2 in c(0.001)){
i2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
text(dat_plot$ONE[i]+adx,dat_plot$TWO[i]+ady,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= color_to_traits(rownames(dat_plot)[i]),srt=-45,cex=1.8)
}
x1=.6
x2=.8
x3=.7
x4=.5
y1=.34
y2= .14
y3=.04
y4=.24
polygon(x=c(x1,x2,x3,x4),
y = c(y1,y2,y3,y4),
border = "white", col = "white", lty = 1)
ni=.21
nx=.11
points(.5+nx, .5-ni, pch=15,col=size_col,cex=1.8)
text(.57+nx, .427-ni, "Size trait",col=size_col,srt=-45,cex=1.8)
points(.47+nx, .47-ni, pch=15,col=eco_col,cex=1.8)
text(.535+nx, .4-ni, "Eco trait",col=eco_col,srt=-45,cex=1.8)
points(.44+nx, .44-ni, pch=15,col=other_col,srt=-45,cex=1.8)
text(.515+nx, .36-ni, "Other trait",col=other_col,cex=1.8,srt=-45)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
text(x = 0.5, y=.9,labels = paste0(nm[1]," Effect (Independent + Joint/2)"),cex=2.5)#, srt = -90)#nm[1],
legend(.1, .8, c("Size trait", "Eco trait", "Other trait"),
#           col = c("#5884b4", "#cd6787", "#e6cf6c"),
col=c(size_col,eco_col,other_col),
text.col = "black", pch = c(16,16,16),
merge = FALSE ,border = FALSE,bty="n" ,y.intersp = 1.5,pt.cex = 2.5)
dev.off()
}
{
pdf(file = file.path(origin,"figures","figure_3",paste0("figure_3a_",shorty,".pdf")),width=10,height=10)
par(mfrow=c(1,1),mar=c(7,7,0,0))
#plot(x=c(0,1),y=c(0,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1, #c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
#     xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
i=1
t=1
dat_plot <- rep(NA,6)
for(t in c(1:17)){
ONEt <- X_hp1[,t]
TWOt <- X_hp2[,t]
dat_plot <- as.data.frame(rbind(dat_plot,
c(mean(ONEt,na.rm = T),quantile(ONEt,0.05,na.rm = T),quantile(ONEt,0.95,na.rm = T),
mean(TWOt,na.rm = T),quantile(TWOt,0.05,na.rm = T),quantile(TWOt,0.95,na.rm = T))))
}
names(dat_plot) <- c("ONE","ONEi","ONEx","TWO","TWOi","TWOx")
dat_plot <- dat_plot[!is.na(dat_plot[,1]),]
rownames(dat_plot) =colnames(X_hp1)
plot_overlayNB(edg,axis_cex=1,climate_col=climate_col_o,soil_col=soil_col_o)
axis(2,at=.5,line = 2,tick = FALSE,labels = paste0(nm[2]," Effect (Independent + Joint/2)"),
cex.axis=2.5,srt = -90)
axis(1,at=.5,line = 3,tick = FALSE,labels = paste0(nm[1]," Effect (Independent + Joint/2)"),
cex.axis=2.5,srt = -90)
i=1
for(i in c(1:nrow(dat_plot))){
points(dat_plot$ONE[i],dat_plot$TWO[i],pch=15,col= color_to_traits(rownames(dat_plot)[i]),cex=2)
}
for(i in c(1:nrow(dat_plot))){
adx=.035
ady=0.006
print(rownames(dat_plot)[i])
if(output_term==""){
if(rownames(dat_plot)[i]=="ConduitDens"){adx=.035;ady=.01}
if(rownames(dat_plot)[i]=="LeN"){adx=-0.03;ady=-.008}
if(rownames(dat_plot)[i]=="LeFMass"){adx=-0.075;ady=0.085}
if(rownames(dat_plot)[i]=="SSD"){adx=-0.05;ady=0.09}
if(rownames(dat_plot)[i]=="SLA"){adx=-0.03;ady=-0.028}
if(rownames(dat_plot)[i]=="LeC"){adx=0.0;ady=-0.04}
if(rownames(dat_plot)[i]=="SeedMass"){adx=-0.075;ady=0.08}
if(rownames(dat_plot)[i]=="PlantHeight"){adx=-0.055;ady=0.055}
if(rownames(dat_plot)[i]=="SeLen"){adx=-0.07;ady=0.07}
if(rownames(dat_plot)[i]=="LeNP"){adx=0.084;ady=-0.05}
if(rownames(dat_plot)[i]=="Led15N"){adx=0.085;ady=-0.06}
if(rownames(dat_plot)[i]=="DispULen"){adx=0.04;ady=0}
if(rownames(dat_plot)[i]=="LeNArea"){adx=0.11;ady=-.08}
if(rownames(dat_plot)[i]=="VesLen"){adx=0.04;ady=-.079}
}
for(i2 in c(0.001)){
j2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
for(j2 in c(0.001)){
i2=0
text((dat_plot$ONE[i]+adx)+j2,(dat_plot$TWO[i]+ady)+i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
text((dat_plot$ONE[i]+adx)-j2,(dat_plot$TWO[i]+ady)-i2,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= "white",srt=-45,cex=1.8)
}
text(dat_plot$ONE[i]+adx,dat_plot$TWO[i]+ady,labels = Rename_Vars(rownames(dat_plot)[i])[,3],pch=16,
col= color_to_traits(rownames(dat_plot)[i]),srt=-45,cex=1.8)
}
x1=.6
x2=.8
x3=.7
x4=.5
y1=.34
y2= .14
y3=.04
y4=.24
polygon(x=c(x1,x2,x3,x4),
y = c(y1,y2,y3,y4),
border = "white", col = "white", lty = 1)
ni=.21
nx=.11
points(.5+nx, .5-ni, pch=15,col=size_col,cex=1.8)
text(.57+nx, .427-ni, "Size trait",col=size_col,srt=-45,cex=1.8)
points(.47+nx, .47-ni, pch=15,col=eco_col,cex=1.8)
text(.535+nx, .4-ni, "Eco trait",col=eco_col,srt=-45,cex=1.8)
points(.44+nx, .44-ni, pch=15,col=other_col,srt=-45,cex=1.8)
text(.515+nx, .36-ni, "Other trait",col=other_col,cex=1.8,srt=-45)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
plot(x=c(0,1),y=c(1,1),pch=16,col=c("white"),ylim=c(0,edg),cex=1,#c(min(TWO[!is.na(ONE)])*1.1,max(TWO[!is.na(ONE)])*1.1),
xlim=c(0,edg),axes=FALSE,ylab="",xlab="",frame=FALSE)
text(x = 0.5, y=.9,labels = paste0(nm[1]," Effect (Independent + Joint/2)"),cex=2.5)#, srt = -90)#nm[1],
legend(.1, .8, c("Size trait", "Eco trait", "Other trait"),
#           col = c("#5884b4", "#cd6787", "#e6cf6c"),
col=c(size_col,eco_col,other_col),
text.col = "black", pch = c(16,16,16),
merge = FALSE ,border = FALSE,bty="n" ,y.intersp = 1.5,pt.cex = 2.5)
dev.off()
}
origin = "/Users/jjoswig/Documents/_docs/03_projects/2021/002_Dichotomy/_script_data/Repo_ClimateSoil_TraitSpectrum/Main"
#  origin =  # please input your directory here
list.files(origin)
# load functions from functions scripts
source(file.path(origin,"scripts" ,"_support_functions","fn_functions.R"))
# Errors: load table_1.R no working
source(file.path(origin,"scripts" ,"_support_functions","fn_packages.R"))# check, this does not exist.
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
}
library(gplots)
library(RColorBrewer)
trait_names=c("LeArea","SSD","SLA","LeC","LeN","LeP","PlantHeight", "SeedMass","SeLen","LeNArea","LeNP",
"Led15N","SenbU","LeFMass","ConduitDens" ,"DispULen","VesLen"   )
# read data
list.files(file.path(origin,"data","master_matrix"))
load(file.path(origin,"data","master_matrix","X1.RData"))
X1_gf <- TRY_Env1
colnames(X1_gf)
X1 <- X1_gf[,colnames(X1_gf)%in%trait_names]
dat_cor <- cor(log(X1))
dat_cor_m <- as.matrix(dat_cor)
# creates an own color palette from red to green
my_palette <- colorRampPalette(c("white","#edf8fb","#b3cde3","#8c96c6","#88419d"))(n = 499)# Plum
my_palette <- colorRampPalette(c("white","#fef0d9","#fdcc8a","#fc8d59","#d7301f"))(n = 499)# Terra Cotta
my_palette <- colorRampPalette(c("white","#f7fcb9","#addd8e","#31a354"))(n = 499)# summer green
col_breaks = c(seq(0,0.1,length=100),  # for red
seq(.11,.2,length=100),
seq(.21,+.35,length=100),
seq(0.36,0.5,length=100), # for yellow
seq(0.51,1,length=100))     # for blue
dat_cor_p <- round(abs(dat_cor_m),digits=2)
dat_cor_p[dat_cor_p==1] <- NA
#rename
nms <- colnames(dat_cor_p)
colnames(dat_cor_p) <- Rename_Vars(colnames(dat_cor_p))[,3]
rownames(dat_cor_p) <- Rename_Vars(rownames(dat_cor_p))[,3]
if(!dir.exists(file.path(origin,"figures","figure_1"))){
dir.create(file.path(origin,"figures","figure_1"))}
pdf(file=file.path(origin,"figures","figure_1","figure_1a.pdf"),height=8,width=9)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
heatmap.2 (dat_cor_p,
# dendrogram control
Rowv = TRUE,
Colv="Rowv", #else TRUE,
distfun = dist,
hclustfun = hclust,
dendrogram = c("row"),
reorderfun = function(d, w) reorder(d, w),
symm = FALSE,
# data scaling
scale = c("none","row", "column"),
na.rm=TRUE,
# image plot
revC = identical(Colv, "Rowv"),
add.expr,
# mapping data to colors
breaks=col_breaks,
symbreaks=any(x < 0, na.rm=TRUE) || scale!="none",
# colors
col=my_palette,
# block sepration
colsep,
rowsep,
sepcolor="white",
sepwidth=c(0.05,0.05),
# cell labeling
cellnote=dat_cor_p,
notecex=1.0,
notecol="black",#"cyan",
na.color=par("bg"),
# level trace
trace=c("none"),
tracecol="cyan",
hline=median(breaks),
vline=median(breaks),
linecol=tracecol,
# Row/Column Labeling
margins = c(12,11.5),
#ColSideColors,
RowSideColors=color_to_traits(nms),
cexRow = 0.2 + 1/log10(nrow(dat_cor_p)),
cexCol = 0.2 + 1/log10(nrow(dat_cor_p)),
labRow = NULL,
labCol = NULL,
srtRow = NULL,
srtCol = NULL,
adjRow = c(0,NA),
adjCol = c(NA,0),
offsetRow = 0.5,
offsetCol = 0.5,
colRow = NULL,
colCol = NULL,
# color key + density info
key = TRUE,
keysize = 1.5,
density.info=c("none"),
denscol=tracecol,
symkey = any(x < 0, na.rm=TRUE) || symbreaks,
densadj = 0.25,
key.title = NULL,
key.xlab = NULL,
key.ylab = NULL,
key.xtickfun = NULL,
key.ytickfun = NULL,
key.par=list(),
# plot labels
main = NULL,
xlab = NULL,
ylab = NULL,
# plot layout
lmat = NULL,
lhei = NULL,
lwid = NULL
)
png(file=file.path(origin,"figures","figure_1","figure_1a.png"),res = 400)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
png(file=file.path(origin,"figures","figure_1","figure_1a.png"),res = 400,width = 900,height = 800)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
dev.off()
png(file=file.path(origin,"figures","figure_1","figure_1a.png"),res = 400,width = 900,height = 800)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
png(file=file.path(origin,"figures","figure_1","figure_1a.png"),res = 400,width = 1800,height = 1600)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
png(file=file.path(origin,"figures","figure_1","figure_1a.png"),res = 400,width = 1800*2,height = 1600*2)
heatmap.2(dat_cor_p,
notecex=1.0,
cexRow =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cexCol =1.9,# 0.2 + 1/log10(nrow(dat_cor_p)),#2,
cellnote = dat_cor_p,  # same data set for cell labels
notecol="black",      # change font color of cell labels to black
#ColSideColors = color_to_traits(colnames(dat_cor_p)),
RowSideColors = color_to_traits(nms),
srtRow = NULL,
#            Colv = c(3:7,1,4:17),#c(9,16,8,7,14,1,15,2,4,11,6,10,3,5,17,12,13),
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,11.5),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
# color key + density info
key = TRUE,
keysize = 1.5
)
dev.off()
