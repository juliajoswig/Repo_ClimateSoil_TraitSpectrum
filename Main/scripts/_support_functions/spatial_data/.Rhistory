# 00 - analysis path
# 1 - Ridge Regression - model building
# 2 - hierarchical partitioning analyses
# 3 - create the figures
# 4 - create the tables
# 5 - get numbers
# ---------------------------------------------------------------------------------------
# 00 - define the origin path
# ---------------------------------------------------------------------------------------
origin = getwd() # please add your local path here
# load functions from functions scripts
source(file.path(origin,"scripts" ,"_support_functions","fn_functions.R"))
# Errors: load table_1.R no working
source(file.path(origin,"scripts" ,"_support_functions","fn_packages.R"))# check, this does not exist.
#------------------------------------------------------------------------------------
# [1.] Ridge Regression - model building
# input folder: data/master_matrix
# output folder: data/_results (output files for nruns=50 already available)
#------------------------------------------------------------------------------------
nruns = 50 # number of model building repetitions for ridge regression final version = 50, for quick version nruns=2
doPCA = TRUE # define if hierarchichal paritioning for PCA prior to RR or PLS is to be done analysis to be done
#install.packages("sf")
#  library("sf")
#  library(spdep)
library(raster)
#  library(sp)
install.packages("SpatialEpi")
#  library(SpatialEpi)
library(rgdal)
library(ncdf4)
#-----------------------------
# read spatial data
#-----------------------------
land.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_land")
#-----------------------------
# read spatial data
#-----------------------------
land.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_land")
origin
origin
# ---------------------------------------------------------------------------------------
# 00 - define the origin path
# ---------------------------------------------------------------------------------------
origin = "/Users/jjoswig/Documents/_docs/03_projects/2021/002_Dichotomy/script_data/20210907_Script&data/Main"#getwd() # please add your local path here
# load functions from functions scripts
source(file.path(origin,"scripts" ,"_support_functions","fn_functions.R"))
# Errors: load table_1.R no working
source(file.path(origin,"scripts" ,"_support_functions","fn_packages.R"))# check, this does not exist.
# ---------------------------------------------------------------------------------------
# 00 - define the origin path
# ---------------------------------------------------------------------------------------
origin = "/Users/jjoswig/Documents/_docs/03_projects/2021/002_Dichotomy/script_data/20210907_Script&data/Main" # getwd() # please add your local path here
# load functions from functions scripts
source(file.path(origin,"scripts" ,"_support_functions","fn_functions.R"))
# Errors: load table_1.R no working
source(file.path(origin,"scripts" ,"_support_functions","fn_packages.R"))# check, this does not exist.
#-----------------------------
# read spatial data
#-----------------------------
land.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_land")
land.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_land")
lake.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_lakes")
admin.polygon <- readOGR(file.path(origin,"data","helper_files","spatial_data","shp_global110/"), "110m_admin_0_countries")
# -------------------------------------------------------------
# load data X2
# -------------------------------------------------------------
load(file = file.path(origin,"data/master_matrix","X2.RData"))
load(file = file.path(origin,"data/helper_files/Ecoregions_selected/Ecoregion_Agg2.RData"))
info <- TRY_Env$info
info_2 <- info[info$ECO_ID%in%Ecoregion_Agg2$ECO_ID,]
# get the Ecoregions of interest:
selected_ER <- as.data.frame(cbind(info_2$ECO_ID,info_2$species.count))
colnames(selected_ER) <- c("ID","nb_traits")
transform(selected_ER,ID=as.numeric(ID),nb_traits=as.numeric(nb_traits))
rm("TRY_Env")
# -------------------------------------------------------------
#  load data X0
# -------------------------------------------------------------
load(file = file.path(origin,"data/master_matrix","X0.RData"))
# cut to selected ERs only
TRY_Env_o <- TRY_Env[TRY_Env$ECO_ID%in%info_2$ECO_ID,]
# -------------------------------------------------------------
# get latlon information of observations:
# -------------------------------------------------------------
coord1 <- cbind(TRY_Env_o$Lat,TRY_Env_o$Lon)
rm("TRY_Env")
rm("TRY_Env_o")
coord <- unique(coord1)# select only unique coordinates
#-----------------------------
# load shapefile
#-----------------------------
fileNow = "wwf_terr_ecos.shp"
fileNpath = file.path(origin,"data","helper_files","EcoregionsShapefiles","wwf_terr_ecos.shp")
TER <- shapefile(fileNpath)
proj4string(TER)
# read spatial script
source(file.path(origin,"scripts","_support_functions","spatial_data","project_raster.R"))
# -------------------------------------------------------------
#  load data X0
# -------------------------------------------------------------
load(file = file.path(origin,"data/master_matrix","X0.RData"))
# cut to selected ERs only
TRY_Env_o <- TRY_Env[TRY_Env$ECO_ID%in%info_2$ECO_ID,]
# -------------------------------------------------------------
# get latlon information of observations:
# -------------------------------------------------------------
coord1 <- cbind(TRY_Env_o$Lat,TRY_Env_o$Lon)
rm("TRY_Env")
rm("TRY_Env_o")
coord <- unique(coord1)# select only unique coordinates
#-----------------------------
# load shapefile
#-----------------------------
fileNow = "wwf_terr_ecos.shp"
fileNpath = file.path(origin,"data","helper_files","EcoregionsShapefiles","wwf_terr_ecos.shp")
TER <- shapefile(fileNpath)
proj4string(TER)
#-----------------------------
# select relevant ecroegions only
#-----------------------------
TER_subset = TER[which(TER$ECO_ID %in% selected_ER$ID),]
#-----------------------------
# Project rasters:
#-----------------------------
test.raster = raster(extent(c(-180,180, -90, 90)), res=2.5)
longlat="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
projection(test.raster) <- longlat
values(test.raster) <- 30
seq(0, 1200, length.out = 9)
brks = seq(0, 300, length.out = 7)
cols <- brewer.pal(n=7, name="YlGn")
library(RColorBrewer)
library(fields)
par(mar=c(0,0,0,0))
arg <- list(at=brks, labels=c("0","50","100", "150", "200", "250", ">300"))
plot(get.projected.raster(raster.object = test.raster, proj.4=world_robinson_projection), axes = F, col=cols, breaks = brks, box=F,
legend=T, horizontal = T, axis.args = arg)
